{"version":3,"file":"9451.73c593e105e3dc8a118d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.module.scss?67d9","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.module.scss?c1d3","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.module.scss?e51e","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  onButtonClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, onButtonClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"translucent\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  onSponsoredButtonClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  onSponsoredButtonClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          onButtonClick={onSponsoredButtonClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  onSponsoredButtonClick: () => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  onSponsoredButtonClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            onSponsoredButtonClick={onSponsoredButtonClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          onSponsoredButtonClick={onSponsoredButtonClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            onSponsoredButtonClick={onSponsoredButtonClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const countText = count && lang('Of', [item.mediaIndex! + 1, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText) parts.push(countText);\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const onSponsoredButtonClick = useLastCallback(() => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        onSponsoredButtonClick={onSponsoredButtonClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = modal || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(modal!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (modal?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: modal.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, modal?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePreviousDeprecated(mainButton?.color, true);\n  const prevMainButtonTextColor = usePreviousDeprecated(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePreviousDeprecated(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePreviousDeprecated(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId } = modal || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"GB3KpHga\",\"root\":\"bv742cLK\",\"transition\":\"M6awemqC\",\"content\":\"ahnxTv9t\",\"main\":\"DC9KsF8l\",\"giftSection\":\"OK5knwl3\",\"section\":\"U4wtCtMj\",\"header\":\"BFRxuPRK\",\"starHeaderText\":\"pOrYpnEf\",\"hiddenHeader\":\"x0wO46Uz\",\"closeButton\":\"lF9a9DcG\",\"avatars\":\"yUYDzqjs\",\"center\":\"ikfz9iTG\",\"description\":\"zoIZUqey\",\"premiumFeatures\":\"LzTgfZVa\",\"boostIcon\":\"jrg2ik9Z\",\"optionBottom\":\"s0ze_M5B\",\"secondaryInfo\":\"ML7Glpia\",\"footer\":\"MQ2XTHHM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumGiftModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst PremiumGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closePremiumGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return oldLang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(oldLang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = oldLang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(oldLang('GiftPremiumWillReceiveBoostsPlural',\n      selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closePremiumGiftModal}\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.giftSection}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <div className={styles.footer}>\n          <Button withPremiumGradient isShiny disabled={!selectedGift} onClick={handleSubmit}>\n            {oldLang(\n              'GiftSubscriptionFor', selectedGift\n              && formatCurrency(selectedGift!.amount, selectedGift.currency, oldLang.code),\n            )}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(PremiumGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) {\n      return [undefined, false];\n    }\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"uH8fqafl\",\"root\":\"aj6xpTC3\",\"main\":\"Iqf5K4mR\",\"headerInfo\":\"IOY_ESbV\",\"logo\":\"Pl_aaBw0\",\"logoBackground\":\"D5l7UeFq\",\"description\":\"ecZztcn2\",\"section\":\"t18TOwVL\",\"header\":\"eRV8zao3\",\"starHeaderText\":\"TTmBv6nH\",\"hiddenHeader\":\"keGf2mX9\",\"closeButton\":\"tlkzyZXX\",\"avatar\":\"P0oMhbon\",\"center\":\"Ri1FZd1z\",\"secondaryInfo\":\"TWNeq00k\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../api/types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport {\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  starsGiftOptions?: ApiStarTopupOption[] | undefined;\n  forUserId?: string;\n  user?: ApiUser;\n};\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  starsGiftOptions,\n  forUserId,\n  user,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: forUserId!,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        options={starsGiftOptions}\n        onClick={handleClick}\n      />\n    );\n  }\n\n  const bottomText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog, styles.root)}\n      dialogRef={dialogRef}\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size=\"huge\"\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getSenderTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          {renderStarOptionList()}\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starsGiftOptions, forUserId, isCompleted,\n  } = selectTabState(global).starsGiftModal || {};\n\n  const user = forUserId ? selectUser(getGlobal(), forUserId) : undefined;\n\n  return {\n    isCompleted,\n    starsGiftOptions,\n    forUserId,\n    user,\n  };\n})(StarsGiftModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasOnClickHandler = Boolean(onConfirm || modalProps.onClose);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasOnClickHandler && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftsEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftsEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftsEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftsEnabled: global.appConfig?.isStarsGiftsEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './PremiumGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openPremiumGiftModal, showNotification } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openPremiumGiftModal({ forUserIds: selectedUserIds });\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: oldLang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      title={oldLang('GiftTelegramPremiumTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onConfirm={handleSendIdList}\n      onEnter={handleSendIdList}\n      withPremiumGradient\n      isConfirmDisabled={!selectedUserIds?.length}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        selectedIds={selectedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdsChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yZCdNeOD\",\"main\":\"Nw_QD6HK\",\"filter\":\"Rn1VBujL\",\"title\":\"bawi8zUd\",\"buttons\":\"LWBSQW38\",\"picker\":\"xwRoLV_t\",\"avatars\":\"sRzPGePZ\",\"center\":\"hM3XfhyZ\",\"description\":\"utdqQEVD\",\"premiumFeatures\":\"ecueYpiv\",\"options\":\"krNSp7Q1\",\"button\":\"Phaog4hK\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterUsersByName, isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = [\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ];\n\n    const filteredContactIds = filterUsersByName(combinedIds, usersById, searchQuery);\n\n    return sortChatIds(unique(filteredContactIds).filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"row\":\"_lSByw2M\",\"section\":\"I0BEPBF0\",\"logo\":\"jbiW0GE8\",\"logoBackground\":\"upEQnNLY\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  logoBackground?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  isGift?: boolean;\n  isPrizeStars?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  logoBackground,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  isGift,\n  isPrizeStars,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!isGift && !isPrizeStars && !noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <div className={styles.section}>\n            <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n            {Boolean(logoBackground)\n              && <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />}\n          </div>\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { getSenderTitle } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"star\":\"EFL6qa9z\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n  canBuyPremium?: boolean;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot, canBuyPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, openStarsGiftingModal, openStarsGiftModal,\n  } = getActions();\n\n  const { balance, history } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  const openStarsGiftingModalHandler = useLastCallback(() => {\n    openStarsGiftingModal({});\n  });\n\n  const openStarsInfoModalHandler = useLastCallback(() => {\n    openStarsGiftModal({});\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? oldLang('StarsNeededTitle', starsNeeded) : oldLang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? oldLang('StarsNeededText', originBotName) : oldLang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          {canBuyPremium && (\n            <Button\n              className={styles.starButton}\n              onClick={openStarsInfoModalHandler}\n            >\n              {oldLang('Star.List.BuyMoreStars')}\n            </Button>\n          )}\n          {canBuyPremium && (\n            <Button\n              className={buildClassName(styles.starButton, 'settings-main-menu-star')}\n              color=\"translucent\"\n              onClick={openStarsGiftingModalHandler}\n            >\n              <StarIcon className=\"icon\" type=\"gold\" size=\"big\" />\n              {oldLang('TelegramStarsGift')}\n            </Button>\n          )}\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"starsHeader\":\"VqKkGnpy\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"mediaShift\":\"owKhvwqB\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"starTitle\":\"KIlRQemn\",\"subtitle\":\"mFYcIYMJ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessageLink, getUserFullName } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectPeer, selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  user?: ApiUser;\n  canPlayAnimatedEmojis?: boolean;\n  starGiftSticker?: ApiSticker;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal, peer, user, canPlayAnimatedEmojis, starGiftSticker,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { transaction } = modal || {};\n  const isGift = transaction?.isGift;\n  const isPrizeStars = transaction?.isPrizeStars;\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const animatedStickerData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    return (\n      <AnimatedIconFromSticker\n        key={transaction.id}\n        sticker={starGiftSticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n      />\n    );\n  }, [canPlayAnimatedEmojis, starGiftSticker, transaction]);\n\n  const giftEntryAboutText = useMemo(() => {\n    const subtitleText = oldLang('lng_credits_box_history_entry_gift_in_about');\n    const subtitleTextParts = subtitleText.split('{link}');\n\n    return (\n      <>\n        {subtitleTextParts[0]}\n        <SafeLink\n          url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n          text={oldLang('GiftStarsSubtitleLinkName')}\n        >\n          {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n        </SafeLink>\n        {subtitleTextParts[1]}\n      </>\n    );\n  }, [oldLang]);\n\n  const giftOutAboutText = useMemo(() => {\n    return lang(\n      'CreditsBoxHistoryEntryGiftOutAbout',\n      {\n        user: <strong>{user ? getUserFullName(user) : ''}</strong>,\n        link: (\n          <SafeLink\n            url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n            text={oldLang('GiftStarsSubtitleLinkName')}\n          >\n            {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, user, oldLang]);\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n        && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = transaction.title || (customPeer ? oldLang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && transaction.messageId\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={buildClassName(styles.header, styles.starsHeader)}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {(isGift || isPrizeStars) ? animatedStickerData : (\n          <img\n            className={buildClassName(styles.starsBackground, media && styles.mediaShift)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {title && <h1 className={styles.title}>{title}</h1>}\n        {(isGift || isPrizeStars) && (\n          <h1 className={buildClassName(styles.title, styles.starTitle)}>\n            {isPrizeStars ? oldLang('StarsGiveawayPrizeReceived')\n              : transaction?.isMyGift ? oldLang('StarsGiftSent') : oldLang('StarsGiftReceived')}\n          </h1>\n        )}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, transaction.stars < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(transaction.stars)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n        {isGift && (\n          <span className={styles.subtitle}>\n            {transaction?.isMyGift ? giftOutAboutText : giftEntryAboutText}\n          </span>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(transaction.stars < 0 || transaction.isMyGift ? 'Stars.Transaction.To'\n        : peerId ? 'Star.Transaction.From' : 'Stars.Transaction.Via'),\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (isPrizeStars) {\n      tableData.push(\n        [oldLang('BoostReason'), oldLang('Giveaway')],\n        [oldLang('Gift'), oldLang('Stars', transaction.stars, 'i')],\n      );\n    }\n\n    if (transaction.id && !isPrizeStars) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <span\n            className={styles.tid}\n            onClick={() => {\n              copyTextToClipboard(transaction.id!);\n              showNotification({\n                message: oldLang('StarsTransactionIDCopied'),\n              });\n            }}\n          >\n            {transaction.id}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !transaction.photo ? (peer || customPeer) : undefined,\n    };\n  }, [\n    transaction, oldLang, peer, isGift, isPrizeStars, animatedStickerData, giftOutAboutText, giftEntryAboutText,\n  ]);\n\n  const prevModalData = usePreviousDeprecated(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      isGift={isGift}\n      isPrizeStars={isPrizeStars}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      noHeaderImage={Boolean(transaction?.extendedMedia)}\n      headerAvatarWebPhoto={transaction?.photo}\n      headerAvatarPeer={renderingModalData?.avatarPeer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const user = peerId ? selectUser(global, peerId) : undefined;\n\n    const starCount = modal?.transaction.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    return {\n      peer,\n      user,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      starGiftSticker,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GsS8Jrki\",\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isMonetizationSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isMonetizationSharing,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, minLevelToRestrictAds]);\n\n  if (isMonetizationSharing && modalData) {\n    return (\n      <TableAboutModal\n        isOpen={isOpen}\n        listItemData={modalData.listItemData}\n        headerIconName=\"channel\"\n        header={modalData.header}\n        footer={modalData.footer}\n        buttonText={oldLang('RevenueSharingAdsUnderstood')}\n        onClose={onClose}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList?.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isSynced?: boolean;\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isSynced,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (!isSynced) return;\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, [isSynced]);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={filteredFoundIds}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isSynced: global.isSynced,\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header settings-picker-title\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {oldLang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return lang('Loading');\n\n    const { visibility, shouldAllowPremium } = setting;\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAdsClick?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n  canReplyInChat,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAdsClick: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAdsClick,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransitionDeprecated(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAdsClick();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openPremiumGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (foundIds?.length) {\n      if (searchType === 'chat') {\n        const [chatId, messageId] = parseSearchResultKey(foundIds[0]);\n        focusMessage({ chatId, messageId, threadId });\n      }\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [searchType, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => performMiddleSearch({ chatId, threadId, query }));\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [focusedIndex + 1, totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n  message,\n  reactionsLimit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      return currentReactions.map(({ reaction }) => reaction);\n    }\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage,\n  type ApiMessageEntity,\n  type ApiReaction,\n  type ApiReactionCustomEmoji,\n  type ApiSticker,\n  type ApiStory,\n  type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n  && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiInvoice, ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","buttonText","isForVideo","onButtonClick","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","withAnimation","isMoving","onFooterClick","onSponsoredButtonClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","date","formattedDate","formatMediaDateTime","count","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","isSponsoredMessage","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","isLowStackPriority","shortName","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closePremiumGiftModal","oldLang","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","main","avatars","headerText","center","part","subpart","boostIcon","giftSection","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectedStarOption","selectedStarCount","starsNeeded","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","stars","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","winner","winners","opt","perUserStars","wideOption","optionTop","formatInteger","stackedStars","StarIcon","stackedStar","optionBottom","moreOptions","noForcedUpperCase","starsGiftOptions","forUserId","starsGiftModal","closeStarsGiftModal","selectedOption","setSelectedOption","bottomText","SafeLink","hiddenHeader","starHeaderText","headerInfo","logoBackground","StarsBackground","logo","StarLogo","formatCurrencyAsString","StarTopupOptionList","secondaryInfo","notFoundText","noScrollRestore","isViewOnly","itemClassName","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","ItemPicker","picker","confirmButtonText","shouldAdaptToSearch","withFixedHeight","modalProps","hasOnClickHandler","headerClassName","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftsEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedStarsGift","userCountOptions","winnerCountOptions","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openPremiumGiftModal","displayedUserIds","handleSendIdList","closeStarsGiftingModal","openStarsGiftModal","combinedIds","isSupport","SERVICE_NOTIFICATIONS_USER_ID","newSelectedId","onSelectedIdChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","menuRef","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","anchor","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","isPrizeStars","withAvatar","hasAbsoluteCloseButton","webPhoto","PickerSelectedItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","openStarsTransactionModal","transactionPeer","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","openStarsGiftingModal","history","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","originBotName","shouldShowTransactions","all","transactions","tosText","openStarsGiftingModalHandler","openStarsInfoModalHandler","BalanceBlock","modalBalance","starButton","renderCount","shouldRestoreHeight","noFastList","TransactionItem","TabList","activeTab","tabs","onSwitchTab","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","botName","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","starCount","starGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","closeStarsTransactionModal","handleOpenMedia","flatMap","animatedStickerData","AnimatedIconFromSticker","giftEntryAboutText","subtitleTextParts","giftOutAboutText","withNodes","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","m","isMyGift","copyTextToClipboard","footerTextParts","renderingModalData","listItemData","headerIconName","isStatic","Separator","isMonetizationSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","TableAboutModal","blockchainText","monetizationTitle","specialReplacement","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","useSelectWithEnter","storyViewerOrigin","MuteChatModal","ChatFolderModal","popularBotApps","botApps","recentBotIds","topBotApps","searchPopularBotApps","openChatWithInfo","shouldShowMoreMine","setShouldShowMoreMine","filteredFoundIds","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","handleToggleShowMoreMine","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","useShowTransition","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","isCustomPeer","avatarIcon","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","update","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","preloadBackwards","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek"],"sourceRoot":""}