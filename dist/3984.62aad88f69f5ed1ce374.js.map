{"version":3,"file":"3984.62aad88f69f5ed1ce374.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/scroll.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"fluid\":\"P_7xai7z\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus />;\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    fluid && styles.fluid,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={styles.name} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo={isVideo}\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isJoinedChannelMessage } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectStarGiftSticker,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const targetUser = targetUsers && targetUsers[0];\n    if (!targetUser || !senderUser) return undefined;\n\n    if (message.isOutgoing) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetChat} />\n          <span> {targetUser.firstName} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={senderUser} />\n        <span> {senderUser.firstName} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift;\n    const targetUser = targetUsers && targetUsers[0]?.firstName;\n    const starGiftMessage = message.content.action?.starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amount = starGift?.starsToConvert;\n\n    if (message.isOutgoing) {\n      return lang('ActionStarGiftOutDescription', {\n        user: targetUser || 'User',\n        count: amount,\n      }, { withNodes: true });\n    }\n\n    if (starGift.isSaved) {\n      return lang('ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoDescriptionOutConverted', {\n          amount: formatInteger(amount!),\n          user: targetUser || 'User',\n        }, {\n          pluralValue: amount!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amount!),\n        }, {\n          pluralValue: amount!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    return lang('ActionStarGiftDescription', {\n      count: amount,\n    }, { withNodes: true });\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code action-message-star-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        {!message.isOutgoing && (\n          <div className=\"action-message-button\">\n            <Sparkles preset=\"button\" />\n            {oldLang('ActionGiftPremiumView')}\n          </div>\n        )}\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starGift = content.action?.type === 'starGift' ? content.action.starGift?.gift : undefined;\n    const starCount = content.action?.stars;\n    const starGiftSticker = starGift?.stickerId ? selectStarGiftSticker(global, starGift.stickerId) : undefined;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'with-service-reactions',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      userId, shouldHideName, giftId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stargift',\n      user,\n      shouldHideName,\n      giftId,\n      message,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { getOffsetToContainer } from './scroll';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","export function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","id","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","fluid","withPeerColors","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","Icon","name","getPeerTitle","FullNameTitle","withEmojiStatus","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","useState","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","color","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","isLoading","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","inputRef","shouldMinimize","requestMeasure","focus","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","type","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","value","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","disabled","inactive","ripple","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","onChange","placeholder","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","role","tabIndex","RippleEffect","IS_IOS","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","random","generateRandomDropPath","path","CustomEmoji","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","find","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","floor","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ActionMessageSuggestedAvatar","message","renderContent","openMediaViewer","uploadProfilePhoto","showNotification","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","action","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","payload","screen","SettingsScreens","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","onClose","ConfirmDialog","isOpen","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","shouldReplaceHistory","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","selectIsCurrentUserPremium","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","useTimeout","handleToggle","Skeleton","xmlns","Button","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","patternColor","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starGift","gift","starCount","stars","starGiftSticker","stickerId","selectStarGiftSticker","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isPrizeStars","withServiceReactions","areReactionsPossible","shouldShowConfettiRef","isUnread","withStars","usersById","users","byId","targetUsers","userId","renderActionMessageText","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","getMessageHtmlId","onMouseDown","preventMessageInputBlur","onContextMenu","giftMessage","AnimatedIconFromSticker","nonInteractive","renderTextWithEntities","entities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetUser","firstName","renderStarGiftUserCaption","starGiftMessage","amount","starsToConvert","withNodes","isSaved","isConverted","pluralValue","withMarkdown","renderStarGiftUserDescription","availabilityTotal","renderStarGift","renderPrizeStars","ContextMenuContainer","anchor","messageListType","onCloseAnimationEnd","Reactions","isOutside","useModuleLoader","Bundles","Extra","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","button","balance","originReaction","startX","startY","offsetHeight","currentScale","Number","getComputedStyle","scale","cancel","animate","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","animatedEmoji","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","totalCount","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","cacheBreaker","toString","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","maxLength","initialValue","onSubmit","setText","handleTextChange","target","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","getTriggerElement","getRootElement","document","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","MenuItem","destructive","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","isApiPeerUser","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","canvas","img","Image","processBlur","ctx","getContext","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","fastBlur","onload","replyOriginForId","loadMessage","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","preventDefault","addEventListener","passive","removeEventListener","addLocalizationCallback","getTranslationFn","prevRef","lastRef","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","dataset","scrollId","remainingPath","Promise","resolve","get","isStopped","set","scrollSnapType","startAt","t","currentPath","transition","round","delete","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","scrollTop","currentScrollTop","containerHeight","scrollHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","beginHeavyAnimation","animateSingle","newScrollTop","isAnimatingScroll","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","p1","p2","rgb2hsb","g","b","h","s","v","hsb2rgb","f","p","q","url","defaultRGB","data","rgb","context","image","preloadImage","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","offsetTop","offsetLeft","contains","offsetParent"],"sourceRoot":""}