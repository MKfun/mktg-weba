{"version":3,"file":"9451.22a796fb022877310d95.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getPeerTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getPeerTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getPeerTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n  isReportModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n  isReportModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    }, reportModal,\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const isReportModalOpen = Boolean(reportModal);\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    isReportModalOpen,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(undefined);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(foundIds, usersById, searchQuery);\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst SAFE_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { height } = ref.current.getBoundingClientRect();\n    const safeAreaHeight = isFullscreen ? SAFE_AREA_HEIGHT : 0;\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: height - safeAreaHeight,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: safeAreaHeight,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n    sendSafeArea();\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiChat, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type {\n  PopupOptions, WebApp, WebAppInboundEvent, WebAppModalStateType, WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser, selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  modalState?: WebAppModalStateType;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n          >\n            <Icon\n              name=\"down\"\n              className={buildClassName(\n                styles.icon,\n                styles.collapseIcon,\n              )}\n              onClick={handleCollapseClick}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n              onClick={handleShowContextMenu}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n            && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={lang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={lang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(\n    { width: DEFAULT_MAXIMIZED_STATE_SIZE.width, height: DEFAULT_MAXIMIZED_STATE_SIZE.height },\n  );\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n  );\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n        {!isMoreAppsTabActive && renderMoreAppsButton()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            styles.fullscreenButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleFullscreenClick}\n        >\n          <Icon className={styles.stateIcon} name=\"expand-modal\" />\n        </Button>\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleCollapseClick}\n        >\n          <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n        </Button>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {isGift ? (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            ) : fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : undefined}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatusId: sticker.id,\n      expires: getServerTime() + duration,\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatusId: renderingModal.customEmojiId,\n      expires,\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      peerId: chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption && sender) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportChannelSpam({ participantId: sender.id, chatId: chat.id, messageIds: filteredMessageIdList });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const userMessagesMap = selectedMessageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          if (sender && userIdList.includes(sender.id)) {\n            if (!acc[sender.id]) {\n              acc[sender.id] = [];\n            }\n            acc[sender.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(userMessagesMap);\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(oldLang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, oldLang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, oldLang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                {lang('SearchContextCaption', {\n                  type: getSearchContextCaption(searchContext),\n                }, {\n                  withNodes: true,\n                })}\n\n                <Transition\n                  name=\"fade\"\n                  shouldCleanup\n                  activeKey={Number(isMessagesFetching)}\n                  className=\"iconContainer\"\n                  slideClassName=\"iconContainerSlide\"\n                >\n                  {isMessagesFetching && (<Loading />)}\n                  {!isMessagesFetching && <Icon name=\"down\" />}\n                </Transition>\n              </Link>\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{oldLang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">\n                {formatStarsAmount(lang, starsBalance)}\n              </span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {oldLang('SendAGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n    { key: 'snapEffect', label: 'Dust-effect deletion' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? oldLang('PrivacyMessagesContactsAndPremium')\n                : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(oldLang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(oldLang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, oldLang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onScreenSelect,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatetefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  contactUserFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  contactUserFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarsGift || isStarGift);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatetefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', contactUserFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getPrivateChatUserId,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  contactUserFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  onClose,\n  onCloseAnimationEnd,\n  contactUserFullName,\n  canGift,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        contactUserFullName={contactUserFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const contactUserFullName = chat && isUserId(chat.id)\n      ? getUserFullName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      contactUserFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  onSendWhenOnline,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 20;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, invoice.currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, invoice.currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: string | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        {needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={lang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","renderDeleteModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","MediaViewerContent","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","isReportModalOpen","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","reportModal","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","Notifications","notifications","notification","Notification","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","SAFE_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","userFullInfo","selectUserFullInfo","botAppSettings","botInfo","appSettings","selectCurrentChat","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","safeAreaHeight","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","closeIcon","stateBack","backButtonCaption","hasHeaderElement","hidden","multiTab","headerPanel","headerButton","backIconContainer","buttonCaptionContainer","headerSplitButton","collapseIcon","moreIcon","loadingPlaceholder","hide","viewBox","defaultPlaceholderGrid","placeholderSquare","renderDefaultPlaceholder","withButton","sandbox","allow","allowFullScreen","buttonsContainer","leftToRight","rightToLeft","topToBottom","bottomToTop","hideHorizontal","oneRow","twoRows","visible","mainButtonSpinner","hasCloseButton","webAppPopup","withoutTitle","filename","withNodes","withMarkdown","MINIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","isLowStackPriority","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","PremiumLogo","CustomEmoji","isBig","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatusId","expires","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","noCustomEmojiPlayback","noTitleAnimations","folderTabNumber","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","TableAboutModal","listItemData","headerIconName","isStatic","Separator","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","VerificationMonetizationModal","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","ReportAdModal","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","isSystemBot","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","DeleteMessageModal","deleteMessages","deleteScheduledMessages","reportChannelSpam","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","participantId","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","DeleteSelectedMessageModal","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","handleReportSpam","userMessagesMap","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","shouldMarkBotTrusted","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","openChatWithInfo","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","shouldDisplayStars","history","all","transactions","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","formatStarsAmount","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","SettingsPrivacyVisibility","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","MessageContextMenu","isReactionPickerOpen","poll","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","contactUserFullName","canGift","openCustomEmojiSets","openGiftModal","scrollableRef","noReactions","areReactionsPossible","withReactions","isPremiumGift","isGiftCode","isStarsGift","isStarGift","shouldShowGiftButton","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","statefulContent","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatetefulContent","extraHeightAudioPlayer","middleColumn","middleColumnComputedStyle","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","isOutgoing","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","ReadTimeMenuItem","LastEditTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","selectCanForwardMessage","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectPollFromMessage","storyData","selectCanGift","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","ContextMenuContainer","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","addLocalPaidReaction","openPaidReactionModal","useShowTransition","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","MiddleSearchResult","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","ReactionPickerLimited","isTouchScreen","shouldUseCurrentReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","ReactionPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","ManageGroupPermissions","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","opt","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}